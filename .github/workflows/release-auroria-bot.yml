# This is a basic workflow to help you get started with Actions

name: Release AuroriaBot

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup the required dotnet core version
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      # Stop the bot process
      - name: Stop Bot
        run: |
          if ((get-process "AuroriaBot" -ea SilentlyContinue) -ne $Null) { 
            Stop-Process -Name "AuroriaBot" -Force
          }

      # Removes existing files in deploy location
      - name: Clear deploy location
        run: |
          if (Test-Path "C:\Applications\AuroriaBot" -PathType Container) { 
            rm "C:\Applications\AuroriaBot" -Recurse
          }

      # Deploy the bot (restore & build are implicit)
      - name: Deploy
        run: dotnet publish .\src\AuroriaBot\ --output "C:\Applications\AuroriaBot" --configuration Release --framework netcoreapp3.1 --runtime win10-x64 --self-contained true -p:PublishTrimmed=true

      # Start the bot process again
      - name: Start Bot
        run: Start-Process -FilePath "C:\Applications\AuroriaBot\AuroriaBot.exe" -WorkingDirectory "C:\Applications\AuroriaBot"
